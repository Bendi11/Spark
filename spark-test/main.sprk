
type test_ty = {
    i32 a,
    { i64 b, (f32 | bool) c } b,
}

type test_ty2 = {
    i32 a,
    i32 b
}

type testing_type = fun(i32) -> f32
type test_enum = i32 | bool

fun ext printf(*u8 fmt, *u8 args)

fun test([2]i32 t) {
    return ()
}

fun ext main(i32 argc, **u8 a) -> i32 {
    let b = (5, [51])
    let testing = if false { phi 5 } else { phi 16 }
    let bc = $test_ty2 #{
        a = 5,
        b = testing
    }
    {
        let other = "test"
        printf:("Testing message: %s\n", other)
    }
    test:([5, 2])
    printf:("bc.b > 5 = %s\n", if bc.b > 5 { phi "true" } else { phi "false" })
    return bc.b
}

fun ext __chkstk() {
    return ()
}
